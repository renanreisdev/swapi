{"version":3,"sources":["components/MainComponents.js","components/partials/Header/styled.js","assets/images/starwars.png","components/partials/Header/index.js","components/partials/Footer/styled.js","components/partials/Footer/index.js","helpers/SwAPI.js","pages/Film/styled.js","helpers/roman.js","pages/Film/index.js","pages/Films/styled.js","pages/Films/index.js","pages/Characters/styled.js","pages/Characters/index.js","pages/People/styled.js","pages/People/index.js","pages/Species/styled.js","pages/Species/index.js","pages/Specie/styled.js","pages/Specie/index.js","pages/Starship/styled.js","pages/Starship/index.js","pages/Starships/styled.js","pages/Starships/index.js","pages/Vehicles/styled.js","pages/Vehicles/index.js","pages/Vehicle/styled.js","pages/Vehicle/index.js","pages/Planets/styled.js","pages/Planets/index.js","pages/Planet/styled.js","pages/Planet/index.js","pages/NotFound/styled.js","pages/NotFound/index.js","Routes.js","App.js","index.js"],"names":["Template","styled","div","PageContainer","HeaderArea","h1","Header","className","to","src","logo","alt","FooterArea","Footer","href","BASEAPI","apiFetchGet","endpoint","a","fetch","response","json","data","SwAPI","getFilm","id","getFilms","results","getCharacters","page","getPeople","getAllPeople","pages","Math","ceil","parseInt","count","i","json2","concat","getSpecies","getSpecie","getAllSpecies","getVehicles","getVehicle","getAllVehicles","getStarships","getStarship","getAllStarships","getPlanets","getPlanet","getAllPlanets","FilmsArea","numberMap","0","1","2","3","romanJs","input","orderNumber","Number","toString","unidadeDezenaCentena","length","newOrder","charAt","finalCast","auxVar","Film","useParams","api","useApi","useState","film","setFilm","people","setPeople","useEffect","fList","pList","title","episode_id","release_date","director","producer","map","k","characters","j","compare1","compare2","url","name","character","replace","opening_crawl","Films","filmsList","setFilmsList","CharactersArea","Characters","peopleList","setPeopleList","next","setNext","previous","setPrevious","PeopleArea","People","planetList","setPlanetList","specieList","setSpecieList","vehicleList","setVehicleList","starshipList","setStarshipList","plList","sList","vList","compare","gender","birth_year","height","mass","homeworld","skin_color","hair_color","eye_color","species","key","vehicles","starships","films","SpeciesArea","Species","speciesList","setSpeciesList","SpecieArea","Specie","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","StarshipArea","Starship","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","pilots","StarshipsArea","Starships","starshipsList","setStarshipsList","VehiclesArea","Vehicles","vehiclesList","setVehiclesList","VehicleArea","Vehicle","vehicle_class","PlanetsArea","Planets","PlanetArea","Planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","NotFoundArea","NotFound","exact","path","App","Routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eb2f4f5.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Template = styled.div`\r\n    .stars {\r\n        position: absolute;\r\n        display: block;\r\n        width: 3px;\r\n        height: 3px;\r\n        \r\n        border-radius: 50%;\r\n        box-shadow: 1rem 1rem white,\r\n        68rem 24rem white,\r\n        80rem 29rem white,\r\n        95rem 40rem white,\r\n        78rem 45rem white,\r\n        106rem 34rem white,\r\n        100rem 7rem white,\r\n        73rem 9rem white,\r\n        89rem 27rem white,\r\n        94rem 15rem white,\r\n        84rem 3rem white,\r\n        11rem 46rem white,\r\n        29rem 13rem white,\r\n        27rem 35rem white,\r\n        15rem 27rem white,\r\n        38rem 37rem white,\r\n        61rem 28rem white,\r\n        21rem 8rem white,\r\n        58rem 15rem white,\r\n        74rem 36rem white,\r\n        45rem 10rem white,\r\n        17rem 24rem white,\r\n        20rem 45rem white,\r\n        5rem 60rem white,\r\n        15rem 57rem white,\r\n        25rem 53rem white,\r\n        31rem 65rem white,\r\n        47rem 69rem white,\r\n        55rem 75rem white,\r\n        68rem 61rem white,\r\n        110rem 40rem white;\r\n\r\n        animation: anim-stars 10s linear infinite;\r\n\r\n        z-index: 0;\r\n    }\r\n\r\n@keyframes anim-stars {\r\n    from {\r\n        transform: translateY(0px);\r\n    }\r\n    to {\r\n        transform: translateY(-150px);\r\n    }\r\n}\r\n`;\r\n\r\nexport const PageContainer = styled.div`\r\n    max-width: 1280px;\r\n    height: calc(100vh - 250px);\r\n    margin: auto;\r\n    padding: 0 2%;\r\n`;\r\n\r\nexport const PageTitle = styled.h1`\r\n\r\n`;\r\n\r\nexport const PageBody = styled.div`\r\n\r\n`;","import styled from 'styled-components';\r\n\r\nexport const HeaderArea = styled.div`\r\n    .container {\r\n        display: flex;\r\n        justify-content: start;\r\n        align-items: center;\r\n        \r\n        max-width: 1280px;\r\n        height: 150px;\r\n        margin: 0 auto;\r\n        padding: 2%;\r\n\r\n        .logo {\r\n            display: flex:\r\n            justify-content: center;\r\n            align-items: center;\r\n            \r\n            width: 200px;\r\n            heigth: 100px;\r\n        }\r\n    \r\n        .logo img {\r\n            width: 100%;\r\n        }\r\n    \r\n        nav {\r\n            width: 100%;\r\n        }\r\n\r\n        nav ul {\r\n            display: flex;\r\n            justify-content: start;\r\n            align-items: center;\r\n    \r\n            margin-left: 2%;\r\n    \r\n            style-list: none;\r\n        }\r\n    \r\n        nav ul li {\r\n            padding: 0 2%;\r\n            list-style: none;\r\n            cursor: pointer;\r\n    \r\n            &:hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    \r\n        nav ul li a {\r\n            color: #dba90d;\r\n            font-size: 1.7rem;\r\n            text-decoration: none;\r\n            transition: all 0.6s;\r\n\r\n            &:hover {\r\n                color: #b48c13;\r\n                text-shadow: 0px 0px 7px #4e4e4e;\r\n            }\r\n        }\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/starwars.ca57ba67.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { HeaderArea } from './styled';\r\nimport logo from './../../../assets/images/starwars.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderArea>\r\n            <div className=\"container\">\r\n                <Link to=\"/\">\r\n                    <div className=\"logo\">\r\n                        <img src={logo} alt=\"logo\" />\r\n                    </div>\r\n                </Link>\r\n                <nav>\r\n                    <ul>\r\n                        <li><Link to=\"/films\">Films</Link></li>\r\n                        <li><Link to=\"/characters/1\">People</Link></li>\r\n                        <li><Link to=\"/species/1\">Species</Link></li>\r\n                        <li><Link to=\"/starships/1\">Starships</Link></li>\r\n                        <li><Link to=\"/Vehicles/1\">Vehicles</Link></li>\r\n                        <li><Link to=\"/planets/1\">Planets</Link></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </HeaderArea>\r\n    );\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const FooterArea = styled.div`\r\n    .container {\r\n        max-width: 1280px;\r\n        height: 100px;\r\n        margin: auto;\r\n        text-align: center;\r\n        line-height: 100px;\r\n\r\n        span {}\r\n            color: #dba90d;\r\n        }\r\n\r\n        span a {\r\n            color: #dba90d;\r\n            text-decoration: none;\r\n\r\n            &:hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport { FooterArea } from './styled';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterArea>\r\n            <div className=\"container\">\r\n                <span>Desenvolvido com ❤ por <a href=\"#\">Renan Reis</a></span>\r\n            </div>\r\n        </FooterArea>\r\n    );\r\n}\r\n\r\nexport default Footer;","const BASEAPI = 'https://swapi.dev/api';\r\n\r\nconst apiFetchPost = async (endpoint, body) => {\r\n    const res = await fetch(BASEAPI + endpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n\r\n    const json = await res.json();\r\n\r\n    return json;\r\n}\r\n\r\nconst apiFetchGet = async (endpoint) => {\r\n    const response = await fetch(BASEAPI + endpoint);\r\n\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nconst SwAPI = {\r\n\r\n    getFilm: async (id = 1) => {\r\n        const json = await apiFetchGet('/films/' + id);\r\n        return json;\r\n    },\r\n\r\n    getFilms: async () => {\r\n        const json = await apiFetchGet('/films');\r\n        return json.results;\r\n    },\r\n\r\n    getCharacters: async (page = 1) => {\r\n        const json = await apiFetchGet('/people/?page=' + page);\r\n        return json;\r\n    },\r\n\r\n    getPeople: async (id = 1) => {\r\n        const json = await apiFetchGet('/people/' + id);\r\n        return json;\r\n    },\r\n\r\n    getAllPeople: async () => {\r\n        let json = await apiFetchGet('/people/');\r\n        let pages = Math.ceil(parseInt(json.count) / 10);\r\n        json = json.results;\r\n\r\n        if (pages > 1) {\r\n            for (let i = 2; i <= pages; i++) {\r\n                let json2 = await apiFetchGet('/people/?page=' + i);\r\n                json = json.concat(json2.results);\r\n            }\r\n        }\r\n        return json;\r\n    },\r\n\r\n    getSpecies: async (page = 1) => {\r\n        const json = await apiFetchGet('/species/?page=' + page);\r\n        return json;\r\n    },\r\n\r\n    getSpecie: async (id = 1) => {\r\n        const json = await apiFetchGet('/species/' + id);\r\n        return json;\r\n    },\r\n\r\n    getAllSpecies: async () => {\r\n        let json = await apiFetchGet('/species/');\r\n        let pages = Math.ceil(parseInt(json.count) / 10);\r\n        json = json.results;\r\n\r\n        if (pages > 1) {\r\n            for (let i = 2; i <= pages; i++) {\r\n                let json2 = await apiFetchGet('/species/?page=' + i);\r\n                json = json.concat(json2.results);\r\n            }\r\n        }\r\n        return json;\r\n    },\r\n\r\n    getVehicles: async (page = 1) => {\r\n        const json = await apiFetchGet('/vehicles/?page=' + page);\r\n        return json;\r\n    },\r\n\r\n    getVehicle: async (id = 1) => {\r\n        const json = await apiFetchGet('/vehicles/' + id);\r\n        return json;\r\n    },\r\n\r\n    getAllVehicles: async () => {\r\n        let json = await apiFetchGet('/vehicles/');\r\n        let pages = Math.ceil(parseInt(json.count) / 10);\r\n        json = json.results;\r\n\r\n        if (pages > 1) {\r\n            for (let i = 2; i <= pages; i++) {\r\n                let json2 = await apiFetchGet('/vehicles/?page=' + i);\r\n                json = json.concat(json2.results);\r\n            }\r\n        }\r\n        return json;\r\n    },\r\n\r\n    getStarships: async (page = 1) => {\r\n        const json = await apiFetchGet('/starships/?page=' + page);\r\n        return json;\r\n    },\r\n\r\n    getStarship: async (id = 1) => {\r\n        const json = await apiFetchGet('/starships/' + id);\r\n        return json;\r\n    },\r\n\r\n    getAllStarships: async () => {\r\n        let json = await apiFetchGet('/starships/');\r\n        let pages = Math.ceil(parseInt(json.count) / 10);\r\n        json = json.results;\r\n\r\n        if (pages > 1) {\r\n            for (let i = 2; i <= pages; i++) {\r\n                let json2 = await apiFetchGet('/starships/?page=' + i);\r\n                json = json.concat(json2.results);\r\n            }\r\n        }\r\n        return json;\r\n    },\r\n\r\n    getPlanets: async (page = 1) => {\r\n        const json = await apiFetchGet('/planets/?page=' + page);\r\n        return json;\r\n    },\r\n\r\n    getPlanet: async (id = 1) => {\r\n        const json = await apiFetchGet('/planets/' + id);\r\n        return json;\r\n    },\r\n\r\n    getAllPlanets: async () => {\r\n        let json = await apiFetchGet('/planets/');\r\n        let pages = Math.ceil(parseInt(json.count) / 10);\r\n        json = json.results;\r\n\r\n        if (pages > 1) {\r\n            for (let i = 2; i <= pages; i++) {\r\n                let json2 = await apiFetchGet('/planets/?page=' + i);\r\n                json = json.concat(json2.results);\r\n            }\r\n        }\r\n        return json;\r\n    }\r\n\r\n};\r\n\r\nexport default () => SwAPI;","import styled from \"styled-components\";\r\n\r\nexport const FilmsArea = styled.div`\r\n    text-align: center;\r\n\r\n    > p {\r\n        text-align: left;\r\n    }\r\n\r\n    h1 {\r\n        padding-top: 5rem;\r\n    }\r\n\r\n    h3 {\r\n        padding-top: 2rem;\r\n        color: #dba90d;\r\n    }\r\n\r\n    .details-film {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        div {\r\n            flex: 1;\r\n        }\r\n    }\r\n\r\n    .people {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        flex-wrap: wrap;\r\n\r\n        a {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n    \r\n            width: 16%;\r\n            height: 2rem;\r\n            margin: 0.5rem 0;\r\n    \r\n            background-color: #dba90d;\r\n            border-radius: 0.7rem;\r\n    \r\n            color: #000;\r\n            font-size: 1rem;\r\n            text-decoration: none;\r\n    \r\n            transition: all 0.6s;\r\n    \r\n            &:hover {\r\n                background-color: #b48c13;\r\n    \r\n                box-shadow: 0px 0px 7px #4e4e4e;\r\n            }\r\n        }\r\n    }\r\n\r\n`;","const numberMap = {\r\n    //Unidade\r\n    0: [\r\n        ''\t\t//0\r\n        , 'I' \t//1\r\n        , 'II'\t//2\r\n        , 'III'\t//3\r\n        , 'IV'\t//4\r\n        , 'V'\t//5\r\n        , 'VI'\t//6\r\n        , 'VII'\t//7\r\n        , 'VIII'\t//8\r\n        , 'IX'\t//9\t\t\t\t\r\n    ]\r\n    //Dezena\r\n    , 1: [\r\n        ''\t\t//10\r\n        , 'X'\t//10\r\n        , 'XX'   //20\r\n        , 'XXX'  //30\r\n        , 'XL'   //40\r\n        , 'L'    //50\r\n        , 'LX'   //60\r\n        , 'LXX'  //70\r\n        , 'LXXX' //80\r\n        , 'XC'   //90\r\n    ]\r\n    , 2: [\r\n        ''\r\n        , 'C'\t//100\r\n        , 'CC'   //200\r\n        , 'CCC'  //300\t\t\t\t\r\n        , 'CD'   //400\r\n        , 'D'    //500\r\n        , 'DC'   //600\r\n        , 'DCC'  //700\r\n        , 'DCCC' //800\r\n        , 'CM' \t//900\r\n    ]\r\n    , 3: [\r\n        ''\r\n        , 'M' //1000\r\n    ]\r\n};\r\n//Obs número maximo é 1999\r\n\r\nexport function romanJs(input) {\r\n\r\n    //input = input.replace('/[^0-9]/', \"\");\r\n    if (input == '') return '';\r\n\r\n    var number = parseInt(input);\r\n\r\n    if (number > 1999) {\r\n        return \"número maximo '1999'\";\r\n    }\r\n\r\n\r\n    //Descobre se é Unidade, Dezena, Centana, Milhar\r\n    var orderNumber = Number(input).toString();\r\n    var orderLength = orderNumber.length;\r\n\r\n\r\n    var unidadeDezenaCentena = orderLength - 1;\r\n\r\n\r\n    var newOrder = '';\r\n    for (var i = unidadeDezenaCentena; i >= 0; i--) {\r\n        newOrder = newOrder + orderNumber.charAt(i);\r\n    }\r\n\r\n    var finalCast = '';\r\n    for (var i = unidadeDezenaCentena; i >= 0; i--) {\r\n        var auxVar = parseInt(newOrder.charAt(i));\r\n        finalCast = finalCast + numberMap[i][auxVar];\r\n    }\r\n\r\n    return finalCast;\r\n}","import react, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { FilmsArea } from './styled';\r\nimport { romanJs } from '../../helpers/roman';\r\n\r\nexport default function Film() {\r\n    let { id } = useParams();\r\n\r\n    const api = useApi();\r\n    const [film, setFilm] = useState([]);\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getFilm = async () => {\r\n            const fList = await api.getFilm(id);\r\n            setFilm(fList);\r\n        }\r\n        getFilm();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getPeople = async () => {\r\n            const pList = await api.getAllPeople();\r\n            setPeople(pList);\r\n        }\r\n        getPeople();\r\n    }, []);\r\n\r\n    const character = (compare1, compare2) => {\r\n        if (compare1.url == compare2) {\r\n            return compare1.name\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PageContainer>\r\n            {film.title &&\r\n                <FilmsArea>\r\n                    <h1>{film.title} - Episode {romanJs(film.episode_id)}</h1>\r\n\r\n                    <div className=\"details-film\">\r\n                        <div>\r\n                            <h3>Release Date:</h3>\r\n                            <p>{film.release_date}</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h3>Director:</h3>\r\n                            <p>{film.director}</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h3>Producer:</h3>\r\n                            <p>{film.producer}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h3>Characters:</h3>\r\n\r\n                    <div className=\"people\">\r\n                        {people.map((i, k) =>\r\n                            film.characters.map((j) =>\r\n                                character(i, j) &&\r\n                                <Link key={k + 1} to={`/people/${i.url.replace('http://swapi.dev/api/people/', '')}`}>{i.name}</Link>\r\n                            )\r\n                        )}\r\n                    </div>\r\n\r\n                    <h3>Opening Crawl:</h3>\r\n                    <p>{film.opening_crawl}</p>\r\n                </FilmsArea>\r\n            }\r\n        </PageContainer >\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilmsArea = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n\r\n    padding-top: 4rem;\r\n\r\n    a,\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        width: 60%;\r\n        height: 5rem;\r\n        margin: 0.5rem 0;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.7rem;\r\n\r\n        color: #000;\r\n        font-size: 1.6rem;\r\n        text-decoration: none;\r\n\r\n        transition: all 0.6s;\r\n\r\n        &:hover {\r\n            background-color: #b48c13;\r\n\r\n            box-shadow: 0px 0px 7px #4e4e4e;\r\n        }\r\n    }\r\n`;","import react, { useEffect, useState } from 'react';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { FilmsArea } from './styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Films() {\r\n    const api = useApi();\r\n    const [filmsList, setFilmsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getFilms = async () => {\r\n            const fList = await api.getFilms();\r\n            setFilmsList(fList);\r\n        }\r\n        getFilms();\r\n    }, []);\r\n\r\n    return (\r\n        <PageContainer>\r\n            <FilmsArea>\r\n                {filmsList.map((i, k) =>\r\n                    <Link key={k + 1} to={`/film/${k + 1}`}>{i.title}</Link>\r\n                )}\r\n            </FilmsArea>\r\n        </PageContainer >\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const CharactersArea = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n\r\n    padding-top: 4rem;\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n\r\n    a,\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        width: 46%;\r\n        height: 5rem;\r\n        margin: 0.5rem 0;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.7rem;\r\n\r\n        color: #000;\r\n        font-size: 1.6rem;\r\n        text-decoration: none;\r\n\r\n        transition: all 0.6s;\r\n\r\n        &:hover {\r\n            background-color: #b48c13;\r\n            box-shadow: 0px 0px 7px #4e4e4e;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        background-color: #0e0e0e;\r\n        color: #fff;\r\n\r\n        cursor: pointer;\r\n        \r\n        &:hover {\r\n            background-color: #0a0a0a;\r\n            color: #fff;\r\n            box-shadow: 0px 0px 7px #181818;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious.inative,\r\n    .buttonNext.inative {\r\n        background-color: #585858;\r\n        color: #acacac;\r\n        cursor: default;\r\n    }\r\n\r\n`;","import react, { useEffect, useState } from 'react';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { CharactersArea } from './styled';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n\r\nexport default function Characters() {\r\n    let { page } = useParams();\r\n\r\n    const api = useApi();\r\n\r\n    const [peopleList, setPeopleList] = useState([]);\r\n    const [next, setNext] = useState(null);\r\n    const [previous, setPrevious] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getPeople = async () => {\r\n            const pList = await api.getCharacters(page);\r\n            setPeopleList(pList.results);\r\n            setNext(pList.next);\r\n            setPrevious(pList.previous);\r\n        }\r\n        getPeople();\r\n    }, []);\r\n\r\n    return (\r\n        <PageContainer>\r\n            {peopleList[0] &&\r\n                <CharactersArea>\r\n                    {peopleList.map((i, k) =>\r\n                        <Link key={k} to={`/people/${i.url.replace('http://swapi.dev/api/people/', '')}`}>\r\n                            {i.name}\r\n                        </Link>\r\n                    )}\r\n\r\n                    <div>\r\n                        {previous\r\n                            ? <a href={`/characters/${previous.replace('http://swapi.dev/api/people/?page=', '')}`} className=\"buttonPrevious\">Previous</a>\r\n                            : <span className=\"buttonPrevious inative\">Previous</span>\r\n                        }\r\n\r\n                        {next\r\n                            ? <a href={`/characters/${next.replace('http://swapi.dev/api/people/?page=', '')}`} className=\"buttonNext\">Next</a>\r\n                            : <span className=\"buttonNext inative\">Next</span>\r\n                        }\r\n                    </div>\r\n\r\n                </CharactersArea>\r\n            }\r\n        </PageContainer >\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const PeopleArea = styled.div`\r\n\r\n    padding-top: 4rem;\r\n\r\n    text-align: center;\r\n\r\n    .card {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: start;\r\n\r\n        width: 460px;\r\n        height: auto;\r\n        margin: auto;\r\n        padding: 0.5rem;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.5rem;\r\n    }\r\n\r\n    h1 {\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    h3 {\r\n        padding-top: 0.5rem;\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    .detailsPeople {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        > div {\r\n            display: flex;\r\n            text-align: left;\r\n        }\r\n\r\n        > div h3 {\r\n            flex: 1;            \r\n        }\r\n\r\n        > div h3 span {\r\n            font-size: 1rem;\r\n            color: #2c2c2c;\r\n        }\r\n\r\n        > div h3 a span {\r\n            transition: all 0.5s;\r\n\r\n            &:hover {\r\n                color: #0e0e0e;\r\n            }\r\n        }\r\n    }\r\n\r\n    .detailsColor {\r\n        display: flex;\r\n\r\n        div {\r\n            flex: 1;\r\n        }\r\n    }\r\n\r\n    a {\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    a li {\r\n        width: 30rem;\r\n        height: 5rem;\r\n        margin: 1rem;\r\n        \r\n        background-color: #dba90d;\r\n        \r\n        list-style: none;\r\n    }\r\n`;","import { useEffect, useState } from 'react';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { PeopleArea } from './styled';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n\r\nexport default function People() {\r\n    const api = useApi();\r\n\r\n    let { id } = useParams();\r\n\r\n    const [peopleList, setPeopleList] = useState([]);\r\n    const [planetList, setPlanetList] = useState([]);\r\n    const [specieList, setSpecieList] = useState([]);\r\n    const [vehicleList, setVehicleList] = useState([]);\r\n    const [starshipList, setStarshipList] = useState([]);\r\n    const [filmsList, setFilmsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getPeople = async () => {\r\n            const pList = await api.getPeople(id);\r\n            setPeopleList(pList);\r\n        }\r\n        getPeople();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getPlanet = async () => {\r\n            const plList = await api.getAllPlanets();\r\n            setPlanetList(plList);\r\n        }\r\n        getPlanet();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getSpecie = async () => {\r\n            const sList = await api.getAllSpecies();\r\n            setSpecieList(sList);\r\n        }\r\n        getSpecie();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getVehicle = async () => {\r\n            const vList = await api.getAllVehicles();\r\n            setVehicleList(vList);\r\n        }\r\n        getVehicle();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getStarship = async () => {\r\n            const sList = await api.getAllStarships();\r\n            setStarshipList(sList);\r\n        }\r\n        getStarship();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getFilm = async () => {\r\n            const fList = await api.getFilms();\r\n            setFilmsList(fList);\r\n        }\r\n        getFilm();\r\n    }, []);\r\n\r\n    const compare = (compare1, compare2) => {\r\n        if (compare1.url == compare2) {\r\n            return compare1.url;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PageContainer>\r\n            {peopleList.name &&\r\n                <PeopleArea>\r\n                    <div className=\"card\">\r\n                        <h1>{peopleList.name}</h1>\r\n\r\n                        <div className=\"detailsPeople\">\r\n\r\n                            <div>\r\n                                <h3>Gender: <span>{peopleList.gender}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Birth Year: <span>{peopleList.birth_year}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Height: <span>{peopleList.height}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Mass: <span>{peopleList.mass}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Homeworld:\r\n                                {planetList.map((i, k) =>\r\n                                    compare(i, peopleList.homeworld) &&\r\n                                    <Link key={k + 1} to={`/planet/${i.url.replace('http://swapi.dev/api/planets/', '')}`}> <span>{i.name}</span></Link>\r\n                                )}\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Skin Color: <span>{peopleList.skin_color}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Hair Color: <span>{peopleList.hair_color}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Eye Color: <span>{peopleList.eye_color}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Species:\r\n                                    {peopleList.species.length > 0\r\n                                        ? <>\r\n                                            {\r\n                                                specieList.map((i, k) =>\r\n                                                    peopleList.species.map((j, key) =>\r\n                                                        compare(i, j) &&\r\n                                                        <Link key={k + 1} to={`/specie/${i.url.replace('http://swapi.dev/api/species/', '')}`}> <span> {i.name ? peopleList.species.length > 1 ? '(' + i.name + ')' : i.name : 'n/a'}</span></Link>\r\n                                                    ))\r\n                                            }\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Vehicles:\r\n                                    {peopleList.vehicles.length > 0\r\n                                        ? <>\r\n                                            {vehicleList.map((i, k) =>\r\n                                                peopleList.vehicles.map(j =>\r\n                                                    compare(i, j) &&\r\n                                                    <Link key={k + 1} to={`/vehicle/${i.url.replace('http://swapi.dev/api/vehicles/', '')}`}> <span> {i.name ? peopleList.vehicles.length > 1 ? '(' + i.name + ')' : i.name : 'n/a'}</span></Link>\r\n                                                ))}\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Starships:\r\n                                    {peopleList.starships.length > 0\r\n                                        ? <>\r\n                                            {starshipList.map((i, k) =>\r\n                                                peopleList.starships.map((j, key) =>\r\n                                                    compare(i, j) &&\r\n                                                    <Link key={k + 1} to={`/starship/${i.url.replace('http://swapi.dev/api/starships/', '')}`}> <span> {i.name ? peopleList.starships.length > 1 ? '(' + i.name + ')' : i.name : 'n/a'}</span></Link>\r\n                                                ))}\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Films:\r\n                                    {peopleList.films.length > 0\r\n                                        ? <>\r\n                                            {filmsList.map((i, k) =>\r\n                                                peopleList.films.map(j =>\r\n                                                    compare(i, j) &&\r\n                                                    <Link key={k + 1} to={`/film/${i.url.replace('http://swapi.dev/api/films/', '')}`}> <span> {i.title ? peopleList.films.length > 1 ? '(' + i.title + ')' : i.title : 'n/a'}</span></Link>\r\n                                                ))}\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </PeopleArea>\r\n            }\r\n        </PageContainer>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const SpeciesArea = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n\r\n    padding-top: 4rem;\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n\r\n    a,\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        width: 46%;\r\n        height: 5rem;\r\n        margin: 0.5rem 0;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.7rem;\r\n\r\n        color: #000;\r\n        font-size: 1.6rem;\r\n        text-decoration: none;\r\n\r\n        transition: all 0.6s;\r\n\r\n        &:hover {\r\n            background-color: #b48c13;\r\n\r\n            box-shadow: 0px 0px 7px #4e4e4e;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        background-color: #0e0e0e;\r\n        color: #fff;\r\n\r\n        cursor: pointer;\r\n        \r\n        &:hover {\r\n            background-color: #0a0a0a;\r\n            color: #fff;\r\n            box-shadow: 0px 0px 7px #181818;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious.inative,\r\n    .buttonNext.inative {\r\n        background-color: #585858;\r\n        color: #acacac;\r\n        cursor: default;\r\n    }\r\n\r\n`;","import react, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { SpeciesArea } from './styled';\r\n\r\nexport default function Species() {\r\n    let { page } = useParams();\r\n\r\n    const api = useApi();\r\n\r\n    const [speciesList, setSpeciesList] = useState([]);\r\n    const [next, setNext] = useState(null);\r\n    const [previous, setPrevious] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getSpecie = async () => {\r\n            const sList = await api.getSpecies(page);\r\n            setSpeciesList(sList.results);\r\n            setNext(sList.next);\r\n            setPrevious(sList.previous);\r\n        }\r\n        getSpecie();\r\n    }, []);\r\n\r\n    return (\r\n        <PageContainer>\r\n            {speciesList[0] &&\r\n                <SpeciesArea>\r\n                    {speciesList.map((i, k) =>\r\n                        <Link key={k} to={`/specie/${i.url.replace('http://swapi.dev/api/species/', '')}`}>\r\n                            {i.name}\r\n                        </Link>\r\n                    )}\r\n\r\n                    <div>\r\n                        {previous\r\n                            ? <a href={`/species/${previous.replace('http://swapi.dev/api/species/?page=', '')}`} className=\"buttonPrevious\">Previous</a>\r\n                            : <span className=\"buttonPrevious inative\">Previous</span>\r\n                        }\r\n\r\n                        {next\r\n                            ? <a href={`/species/${next.replace('http://swapi.dev/api/species/?page=', '')}`} className=\"buttonNext\">Next</a>\r\n                            : <span className=\"buttonNext inative\">Next</span>\r\n                        }\r\n                    </div>\r\n                </SpeciesArea>\r\n            }\r\n        </PageContainer >\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const SpecieArea = styled.div`\r\n\r\n    padding-top: 4rem;\r\n\r\n    text-align: center;\r\n\r\n    .card {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: start;\r\n\r\n        width: 460px;\r\n        height: auto;\r\n        margin: auto;\r\n        padding: 0.5rem;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.5rem;\r\n    }\r\n\r\n    h1 {\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    h3 {\r\n        padding-top: 0.5rem;\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    .detailsSpecie {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        > div {\r\n            display: flex;\r\n            text-align: left;\r\n        }\r\n\r\n        > div h3 {\r\n            flex: 1;            \r\n        }\r\n\r\n        > div h3 span {\r\n            font-size: 1rem;\r\n            color: #2c2c2c;\r\n        }\r\n\r\n        > div h3 a span {\r\n            transition: all 0.5s;\r\n\r\n            &:hover {\r\n                color: #0e0e0e;\r\n            }\r\n        }\r\n    }\r\n\r\n    .detailsColor {\r\n        display: flex;\r\n\r\n        div {\r\n            flex: 1;\r\n        }\r\n    }\r\n\r\n    a {\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    a li {\r\n        width: 30rem;\r\n        height: 5rem;\r\n        margin: 1rem;\r\n        \r\n        background-color: #dba90d;\r\n        \r\n        list-style: none;\r\n    }\r\n`;","import { useEffect, useState } from 'react';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { SpecieArea } from './styled';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n\r\nexport default function Specie() {\r\n    const api = useApi();\r\n\r\n    let { id } = useParams();\r\n\r\n    const [specieList, setSpecieList] = useState([]);\r\n    const [planetList, setPlanetList] = useState([]);\r\n    const [peopleList, setPeopleList] = useState([]);\r\n    const [filmsList, setFilmsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getSpecie = async () => {\r\n            const sList = await api.getSpecie(id);\r\n            setSpecieList(sList);\r\n        }\r\n        getSpecie();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getPlanet = async () => {\r\n            const plList = await api.getAllPlanets();\r\n            setPlanetList(plList);\r\n        }\r\n        getPlanet();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getPeople = async () => {\r\n            const pList = await api.getAllPeople();\r\n            setPeopleList(pList);\r\n        }\r\n        getPeople();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getFilm = async () => {\r\n            const fList = await api.getFilms();\r\n            setFilmsList(fList);\r\n        }\r\n        getFilm();\r\n    }, []);\r\n\r\n    const compare = (compare1, compare2) => {\r\n        if (compare1.url == compare2) {\r\n            return compare1.url;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PageContainer>\r\n            {specieList.name &&\r\n                <SpecieArea>\r\n                    <div className=\"card\">\r\n                        <h1>{specieList.name}</h1>\r\n\r\n                        <div className=\"detailsSpecie\">\r\n                            <div>\r\n                                <h3>Classification: <span>{specieList.classification}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Designation: <span>{specieList.designation}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Average Height: <span>{specieList.average_height}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Skin Colors: <span>{specieList.skin_colors}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Hair Colors: <span>{specieList.hair_colors}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Eye Colors: <span>{specieList.eye_colors}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Average Lifespan: <span>{specieList.average_lifespan}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Homeworld:\r\n                                {planetList.map((i, k) =>\r\n                                    compare(i, specieList.homeworld) &&\r\n                                    <Link key={k + 1} to={`/planet/${i.url.replace('http://swapi.dev/api/planets/', '')}`}> <span>{i.name}</span></Link>\r\n                                )}\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Language: <span>{specieList.language}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>People:\r\n                                    {specieList.people.length > 0\r\n                                        ? <>\r\n                                            {\r\n                                                peopleList.map((i, k) =>\r\n                                                    specieList.people.map((j, key) =>\r\n                                                        compare(i, j) &&\r\n                                                        <Link key={k + 1} to={`/people/${i.url.replace('http://swapi.dev/api/people/', '')}`}> <span> {i.name ? specieList.people.length > 1 ? '(' + i.name + ')' : i.name : 'n/a'}</span></Link>\r\n                                                    ))\r\n                                            }\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Films:\r\n                                    {specieList.films.length > 0\r\n                                        ? <>\r\n                                            {filmsList.map((i, k) =>\r\n                                                specieList.films.map(j =>\r\n                                                    compare(i, j) &&\r\n                                                    <Link key={k + 1} to={`/film/${i.url.replace('http://swapi.dev/api/films/', '')}`}> <span> {i.title ? specieList.films.length > 1 ? '(' + i.title + ')' : i.title : 'n/a'}</span></Link>\r\n                                                ))}\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </SpecieArea>\r\n            }\r\n        </PageContainer>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StarshipArea = styled.div`\r\n\r\n    padding-top: 4rem;\r\n\r\n    text-align: center;\r\n\r\n    .card {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: start;\r\n\r\n        width: 460px;\r\n        height: auto;\r\n        margin: auto;\r\n        padding: 0.5rem;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.5rem;\r\n    }\r\n\r\n    h1 {\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    h3 {\r\n        padding-top: 0.5rem;\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    .detailsStarship {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        > div {\r\n            display: flex;\r\n            text-align: left;\r\n        }\r\n\r\n        > div h3 {\r\n            flex: 1;            \r\n        }\r\n\r\n        > div h3 span {\r\n            font-size: 1rem;\r\n            color: #2c2c2c;\r\n        }\r\n\r\n        > div h3 a span {\r\n            transition: all 0.5s;\r\n\r\n            &:hover {\r\n                color: #0e0e0e;\r\n            }\r\n        }\r\n    }\r\n\r\n    .detailsColor {\r\n        display: flex;\r\n\r\n        div {\r\n            flex: 1;\r\n        }\r\n    }\r\n\r\n    a {\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    a li {\r\n        width: 30rem;\r\n        height: 5rem;\r\n        margin: 1rem;\r\n        \r\n        background-color: #dba90d;\r\n        \r\n        list-style: none;\r\n    }\r\n`;","import { useEffect, useState } from 'react';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { StarshipArea } from './styled';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n\r\nexport default function Starship() {\r\n    const api = useApi();\r\n\r\n    let { id } = useParams();\r\n\r\n    const [starshipList, setStarshipList] = useState([]);\r\n    const [peopleList, setPeopleList] = useState([]);\r\n    const [filmsList, setFilmsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getStarship = async () => {\r\n            const sList = await api.getStarship(id);\r\n            setStarshipList(sList);\r\n        }\r\n        getStarship();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getPeople = async () => {\r\n            const pList = await api.getAllPeople();\r\n            setPeopleList(pList);\r\n        }\r\n        getPeople();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getFilm = async () => {\r\n            const fList = await api.getFilms();\r\n            setFilmsList(fList);\r\n        }\r\n        getFilm();\r\n    }, []);\r\n\r\n    const compare = (compare1, compare2) => {\r\n        if (compare1.url == compare2) {\r\n            return compare1.url;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PageContainer>\r\n            {starshipList.name &&\r\n                <StarshipArea>\r\n                    <div className=\"card\">\r\n                        <h1>{starshipList.name}</h1>\r\n\r\n                        <div className=\"detailsStarship\">\r\n\r\n                            <div>\r\n                                <h3>Model: <span>{starshipList.model}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Manufacturer: <span>{starshipList.manufacturer}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Cost In Credits: <span>{starshipList.cost_in_credits}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Length: <span>{starshipList.length}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Max Atmosphering Speed: <span>{starshipList.max_atmosphering_speed}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Crew: <span>{starshipList.crew}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Passengers: <span>{starshipList.passengers}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Cargo Capacity: <span>{starshipList.cargo_capacity}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Consumables: <span>{starshipList.consumables}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Hyperdrive Rating: <span>{starshipList.hyperdrive_rating}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>MGLT: <span>{starshipList.MGLT}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Starship Class: <span>{starshipList.starship_class}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Pilots:\r\n                                    {starshipList.pilots.length > 0\r\n                                        ? <>\r\n                                            {\r\n                                                peopleList.map((i, k) =>\r\n                                                    starshipList.pilots.map((j, key) =>\r\n                                                        compare(i, j) &&\r\n                                                        <Link key={k + 1} to={`/people/${i.url.replace('http://swapi.dev/api/people/', '')}`}> <span> {i.name ? starshipList.pilots.length > 1 ? '(' + i.name + ')' : i.name : 'n/a'}</span></Link>\r\n                                                    ))\r\n                                            }\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Films:\r\n                                    {starshipList.films.length > 0\r\n                                        ? <>\r\n                                            {filmsList.map((i, k) =>\r\n                                                starshipList.films.map(j =>\r\n                                                    compare(i, j) &&\r\n                                                    <Link key={k + 1} to={`/film/${i.url.replace('http://swapi.dev/api/films/', '')}`}> <span> {i.title ? starshipList.films.length > 1 ? '(' + i.title + ')' : i.title : 'n/a'}</span></Link>\r\n                                                ))}\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </StarshipArea>\r\n            }\r\n        </PageContainer>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StarshipsArea = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n\r\n    padding-top: 4rem;\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n\r\n    a,\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        width: 46%;\r\n        height: 5rem;\r\n        margin: 0.5rem 0;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.7rem;\r\n\r\n        color: #000;\r\n        font-size: 1.6rem;\r\n        text-decoration: none;\r\n\r\n        transition: all 0.6s;\r\n\r\n        &:hover {\r\n            background-color: #b48c13;\r\n\r\n            box-shadow: 0px 0px 7px #4e4e4e;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        background-color: #0e0e0e;\r\n        color: #fff;\r\n\r\n        cursor: pointer;\r\n        \r\n        &:hover {\r\n            background-color: #0a0a0a;\r\n            color: #fff;\r\n            box-shadow: 0px 0px 7px #181818;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious.inative,\r\n    .buttonNext.inative {\r\n        background-color: #585858;\r\n        color: #acacac;\r\n        cursor: default;\r\n    }\r\n\r\n`;","import react, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { StarshipsArea } from './styled';\r\n\r\nexport default function Starships() {\r\n    let { page } = useParams();\r\n\r\n    const api = useApi();\r\n\r\n    const [starshipsList, setStarshipsList] = useState([]);\r\n    const [next, setNext] = useState(null);\r\n    const [previous, setPrevious] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getStarship = async () => {\r\n            const sList = await api.getStarships(page);\r\n            setStarshipsList(sList.results);\r\n            setNext(sList.next);\r\n            setPrevious(sList.previous);\r\n        }\r\n        getStarship();\r\n    }, []);\r\n\r\n    return (\r\n        <PageContainer>\r\n            {starshipsList[0] &&\r\n                <StarshipsArea>\r\n                    {starshipsList.map((i, k) =>\r\n                        <Link key={k} to={`/starship/${i.url.replace('http://swapi.dev/api/starships/', '')}`}>\r\n                            {i.name}\r\n                        </Link>\r\n                    )}\r\n                    <div>\r\n                        {previous\r\n                            ? <a href={`/starships/${previous.replace('http://swapi.dev/api/starships/?page=', '')}`} className=\"buttonPrevious\">Previous</a>\r\n                            : <span className=\"buttonPrevious inative\">Previous</span>\r\n                        }\r\n\r\n                        {next\r\n                            ? <a href={`/starships/${next.replace('http://swapi.dev/api/starships/?page=', '')}`} className=\"buttonNext\">Next</a>\r\n                            : <span className=\"buttonNext inative\">Next</span>\r\n                        }\r\n                    </div>\r\n\r\n                </StarshipsArea>\r\n            }\r\n        </PageContainer >\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const VehiclesArea = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n\r\n    padding-top: 4rem;\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n\r\n    a,\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        width: 46%;\r\n        height: 5rem;\r\n        margin: 0.5rem 0;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.7rem;\r\n\r\n        color: #000;\r\n        font-size: 1.6rem;\r\n        text-decoration: none;\r\n\r\n        transition: all 0.6s;\r\n\r\n        &:hover {\r\n            background-color: #b48c13;\r\n\r\n            box-shadow: 0px 0px 7px #4e4e4e;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        background-color: #0e0e0e;\r\n        color: #fff;\r\n\r\n        cursor: pointer;\r\n        \r\n        &:hover {\r\n            background-color: #0a0a0a;\r\n            color: #fff;\r\n            box-shadow: 0px 0px 7px #181818;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious.inative,\r\n    .buttonNext.inative {\r\n        background-color: #585858;\r\n        color: #acacac;\r\n        cursor: default;\r\n    }\r\n\r\n`;","import react, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { VehiclesArea } from './styled';\r\n\r\nexport default function Vehicles() {\r\n    let { page } = useParams();\r\n\r\n    const api = useApi();\r\n\r\n    const [vehiclesList, setVehiclesList] = useState([]);\r\n    const [next, setNext] = useState(null);\r\n    const [previous, setPrevious] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getVehicle = async () => {\r\n            const vList = await api.getVehicles(page);\r\n            setVehiclesList(vList.results);\r\n            setNext(vList.next);\r\n            setPrevious(vList.previous);\r\n        }\r\n        getVehicle();\r\n    }, []);\r\n\r\n    return (\r\n        <PageContainer>\r\n            {vehiclesList[0] &&\r\n                <VehiclesArea>\r\n                    {vehiclesList.map((i, k) =>\r\n                        <Link key={k} to={`/vehicle/${i.url.replace('http://swapi.dev/api/vehicles/', '')}`}>\r\n                            {i.name}\r\n                        </Link>\r\n                    )}\r\n\r\n                    <div>\r\n                        {previous\r\n                            ? <a href={`/vehicles/${previous.replace('http://swapi.dev/api/vehicles/?page=', '')}`} className=\"buttonPrevious\">Previous</a>\r\n                            : <span className=\"buttonPrevious inative\">Previous</span>\r\n                        }\r\n\r\n                        {next\r\n                            ? <a href={`/vehicles/${next.replace('http://swapi.dev/api/vehicles/?page=', '')}`} className=\"buttonNext\">Next</a>\r\n                            : <span className=\"buttonNext inative\">Next</span>\r\n                        }\r\n                    </div>\r\n                </VehiclesArea>\r\n            }\r\n        </PageContainer >\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const VehicleArea = styled.div`\r\n\r\n    padding-top: 4rem;\r\n\r\n    text-align: center;\r\n\r\n    .card {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: start;\r\n\r\n        width: 460px;\r\n        height: auto;\r\n        margin: auto;\r\n        padding: 0.5rem;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.5rem;\r\n    }\r\n\r\n    h1 {\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    h3 {\r\n        padding-top: 0.5rem;\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    .detailsVehicle {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        > div {\r\n            display: flex;\r\n            text-align: left;\r\n        }\r\n\r\n        > div h3 {\r\n            flex: 1;            \r\n        }\r\n\r\n        > div h3 span {\r\n            font-size: 1rem;\r\n            color: #2c2c2c;\r\n        }\r\n\r\n        > div h3 a span {\r\n            transition: all 0.5s;\r\n\r\n            &:hover {\r\n                color: #0e0e0e;\r\n            }\r\n        }\r\n    }\r\n\r\n    .detailsColor {\r\n        display: flex;\r\n\r\n        div {\r\n            flex: 1;\r\n        }\r\n    }\r\n\r\n    a {\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    a li {\r\n        width: 30rem;\r\n        height: 5rem;\r\n        margin: 1rem;\r\n        \r\n        background-color: #dba90d;\r\n        \r\n        list-style: none;\r\n    }\r\n`;","import { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { VehicleArea } from './styled';\r\n\r\n\r\nexport default function Vehicle() {\r\n    const api = useApi();\r\n\r\n    let { id } = useParams();\r\n\r\n    const [vehicleList, setVehicleList] = useState([]);\r\n    const [peopleList, setPeopleList] = useState([]);\r\n    const [filmsList, setFilmsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getVehicle = async () => {\r\n            const vList = await api.getVehicle(id);\r\n            setVehicleList(vList);\r\n        }\r\n        getVehicle();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getPeople = async () => {\r\n            const pList = await api.getAllPeople();\r\n            setPeopleList(pList);\r\n        }\r\n        getPeople();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getFilm = async () => {\r\n            const fList = await api.getFilms();\r\n            setFilmsList(fList);\r\n        }\r\n        getFilm();\r\n    }, []);\r\n\r\n    const compare = (compare1, compare2) => {\r\n        if (compare1.url == compare2) {\r\n            return compare1.url;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PageContainer>\r\n            {vehicleList.name &&\r\n                <VehicleArea>\r\n                    <div className=\"card\">\r\n                        <h1>{vehicleList.name}</h1>\r\n\r\n                        <div className=\"detailsVehicle\">\r\n\r\n                            <div>\r\n                                <h3>Model: <span>{vehicleList.model}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Manufacturer: <span>{vehicleList.manufacturer}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Cost In Credits: <span>{vehicleList.cost_in_credits}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Length: <span>{vehicleList.length}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Max Atmosphering Speed: <span>{vehicleList.max_atmosphering_speed}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Crew: <span>{vehicleList.crew}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Passengers: <span>{vehicleList.passengers}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Cargo Capacity: <span>{vehicleList.cargo_capacity}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Consumables: <span>{vehicleList.consumables}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Vehicle Class: <span>{vehicleList.vehicle_class}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Pilots:\r\n                                    {vehicleList.pilots.length > 0\r\n                                        ? <>\r\n                                            {\r\n                                                peopleList.map((i, k) =>\r\n                                                    vehicleList.pilots.map((j, key) =>\r\n                                                        compare(i, j) &&\r\n                                                        <Link key={k + 1} to={`/people/${i.url.replace('http://swapi.dev/api/people/', '')}`}> <span> {i.name ? vehicleList.pilots.length > 1 ? '(' + i.name + ')' : i.name : 'n/a'}</span></Link>\r\n                                                    ))\r\n                                            }\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Films:\r\n                                    {vehicleList.films.length > 0\r\n                                        ? <>\r\n                                            {filmsList.map((i, k) =>\r\n                                                vehicleList.films.map(j =>\r\n                                                    compare(i, j) &&\r\n                                                    <Link key={k + 1} to={`/film/${i.url.replace('http://swapi.dev/api/films/', '')}`}> <span> {i.title ? vehicleList.films.length > 1 ? '(' + i.title + ')' : i.title : 'n/a'}</span></Link>\r\n                                                ))}\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </VehicleArea>\r\n            }\r\n        </PageContainer>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const PlanetsArea = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n\r\n    padding-top: 4rem;\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n\r\n    a,\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        width: 46%;\r\n        height: 5rem;\r\n        margin: 0.5rem 0;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.7rem;\r\n\r\n        color: #000;\r\n        font-size: 1.6rem;\r\n        text-decoration: none;\r\n\r\n        transition: all 0.6s;\r\n\r\n        &:hover {\r\n            background-color: #b48c13;\r\n\r\n            box-shadow: 0px 0px 7px #4e4e4e;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious,\r\n    .buttonNext {\r\n        background-color: #0e0e0e;\r\n        color: #fff;\r\n\r\n        cursor: pointer;\r\n        \r\n        &:hover {\r\n            background-color: #0a0a0a;\r\n            color: #fff;\r\n            box-shadow: 0px 0px 7px #181818;\r\n        }\r\n    }\r\n\r\n    .buttonPrevious.inative,\r\n    .buttonNext.inative {\r\n        background-color: #585858;\r\n        color: #acacac;\r\n        cursor: default;\r\n    }\r\n\r\n`;","import react, { useEffect, useState } from 'react';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { PlanetsArea } from './styled';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n\r\nexport default function Planets() {\r\n    let { page } = useParams();\r\n\r\n    const api = useApi();\r\n\r\n    const [planetList, setPlanetList] = useState([]);\r\n    const [next, setNext] = useState(null);\r\n    const [previous, setPrevious] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getPlanet = async () => {\r\n            const pList = await api.getPlanets(page);\r\n            setPlanetList(pList.results);\r\n            setNext(pList.next);\r\n            setPrevious(pList.previous);\r\n        }\r\n        getPlanet();\r\n    }, []);\r\n\r\n    return (\r\n        <PageContainer>\r\n            {planetList[0] &&\r\n                <PlanetsArea>\r\n                    {planetList.map((i, k) =>\r\n                        <Link key={k} to={`/planet/${i.url.replace('http://swapi.dev/api/planets/', '')}`}>\r\n                            {i.name}\r\n                        </Link>\r\n                    )}\r\n\r\n                    <div>\r\n                        {previous\r\n                            ? <a href={`/planets/${previous.replace('http://swapi.dev/api/planets/?page=', '')}`} className=\"buttonPrevious\">Previous</a>\r\n                            : <span className=\"buttonPrevious inative\">Previous</span>\r\n                        }\r\n\r\n                        {next\r\n                            ? <a href={`/planets/${next.replace('http://swapi.dev/api/planets/?page=', '')}`} className=\"buttonNext\">Next</a>\r\n                            : <span className=\"buttonNext inative\">Next</span>\r\n                        }\r\n                    </div>\r\n\r\n                </PlanetsArea>\r\n            }\r\n        </PageContainer >\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const PlanetArea = styled.div`\r\n\r\n    padding-top: 4rem;\r\n\r\n    text-align: center;\r\n\r\n    .card {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: start;\r\n\r\n        width: 460px;\r\n        height: auto;\r\n        margin: auto;\r\n        padding: 0.5rem;\r\n\r\n        background-color: #dba90d;\r\n        border-radius: 1.5rem;\r\n    }\r\n\r\n    h1 {\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    h3 {\r\n        padding-top: 0.5rem;\r\n        color: #0e0e0e;\r\n    }\r\n\r\n    .detailsPlanet {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        > div {\r\n            display: flex;\r\n            text-align: left;\r\n        }\r\n\r\n        > div h3 {\r\n            flex: 1;            \r\n        }\r\n\r\n        > div h3 span {\r\n            font-size: 1rem;\r\n            color: #2c2c2c;\r\n        }\r\n\r\n        > div h3 a span {\r\n            transition: all 0.5s;\r\n\r\n            &:hover {\r\n                color: #0e0e0e;\r\n            }\r\n        }\r\n    }\r\n\r\n    .detailsColor {\r\n        display: flex;\r\n\r\n        div {\r\n            flex: 1;\r\n        }\r\n    }\r\n\r\n    a {\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    a li {\r\n        width: 30rem;\r\n        height: 5rem;\r\n        margin: 1rem;\r\n        \r\n        background-color: #dba90d;\r\n        \r\n        list-style: none;\r\n    }\r\n`;","import { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport useApi from '../../helpers/SwAPI';\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { PlanetArea } from './styled';\r\n\r\nexport default function Planet() {\r\n    const api = useApi();\r\n\r\n    let { id } = useParams();\r\n\r\n    const [planetList, setPlanetList] = useState([]);\r\n    const [peopleList, setPeopleList] = useState([]);\r\n    const [filmsList, setFilmsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getPlanet = async () => {\r\n            const pList = await api.getPlanet(id);\r\n            setPlanetList(pList);\r\n        }\r\n        getPlanet();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getPeople = async () => {\r\n            const pList = await api.getAllPeople();\r\n            setPeopleList(pList);\r\n        }\r\n        getPeople();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getFilm = async () => {\r\n            const fList = await api.getFilms();\r\n            setFilmsList(fList);\r\n        }\r\n        getFilm();\r\n    }, []);\r\n\r\n    const compare = (compare1, compare2) => {\r\n        if (compare1.url == compare2) {\r\n            return compare1.url\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PageContainer>\r\n            {planetList.name &&\r\n                <PlanetArea>\r\n                    <div className=\"card\">\r\n                        <h1>{planetList.name}</h1>\r\n\r\n                        <div className=\"detailsPlanet\">\r\n                            <div>\r\n                                <h3>Rotation Period: <span>{planetList.rotation_period}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Orbital Period: <span>{planetList.orbital_period}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Diameter: <span>{planetList.diameter}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Climate: <span>{planetList.climate}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Gravity: <span>{planetList.gravity}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Terrain: <span>{planetList.terrain}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Surface Water: <span>{planetList.surface_water}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Population: <span>{planetList.population}</span></h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Residents:\r\n                                    {planetList.residents.length > 0\r\n                                        ? <>\r\n                                            {\r\n                                                peopleList.map((i, k) =>\r\n                                                    planetList.residents.map((j, key) =>\r\n                                                        compare(i, j) &&\r\n                                                        <Link key={k + 1} to={`/planet/${i.url.replace('http://swapi.dev/api/planets/', '')}`}> <span> {i.name ? '(' + i.name + ')' : 'n/a'}</span></Link>\r\n                                                    ))\r\n                                            }\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h3>Films:\r\n                                    {planetList.films.length > 0\r\n                                        ? <>\r\n                                            {filmsList.map((i, k) =>\r\n                                                planetList.films.map(j =>\r\n                                                    compare(i, j) &&\r\n                                                    <Link key={k + 1} to={`/film/${i.url.replace('http://swapi.dev/api/films/', '')}`}> <span> {i.title ? planetList.films.length > 1 ? '(' + i.title + ')' : i.title : 'n/a'}</span></Link>\r\n                                                ))}\r\n                                        </>\r\n                                        : <span> n/a</span>\r\n                                    }\r\n                                </h3>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </PlanetArea>\r\n            }\r\n        </PageContainer>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const NotFoundArea = styled.div`\r\n    text-align: center;\r\n    line-height: calc(100vh - 250px);\r\n\r\n    span {\r\n        font-size: 2rem;\r\n        color: #dba90d;\r\n    }\r\n`;","import react from 'react';\r\n\r\nimport { PageContainer } from '../../components/MainComponents';\r\nimport { NotFoundArea } from './styled';\r\n\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <PageContainer>\r\n            <NotFoundArea>\r\n                <span>Page Not Found!</span>\r\n            </NotFoundArea>\r\n        </PageContainer>\r\n    );\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Film from './pages/Film';\r\nimport Films from './pages/Films';\r\nimport Characters from './pages/Characters';\r\nimport People from './pages/People';\r\nimport Species from './pages/Species';\r\nimport Specie from './pages/Specie';\r\nimport Starship from './pages/Starship';\r\nimport Starships from './pages/Starships';\r\nimport Vehicles from './pages/Vehicles';\r\nimport Vehicle from './pages/Vehicle';\r\nimport Planets from './pages/Planets';\r\nimport Planet from './pages/Planet';\r\nimport NotFound from './pages/NotFound';\r\n\r\nexport default () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Films />\r\n            </Route>\r\n\r\n            <Route exact path=\"/films\">\r\n                <Films />\r\n            </Route>\r\n\r\n            <Route exact path=\"/film/:id\">\r\n                <Film />\r\n            </Route>\r\n\r\n            <Route exact path=\"/characters/:page\">\r\n                <Characters />\r\n            </Route>\r\n\r\n            <Route exact path=\"/people/:id\">\r\n                <People />\r\n            </Route>\r\n\r\n            <Route exact path=\"/planets/:page\">\r\n                <Planets />\r\n            </Route>\r\n\r\n            <Route exact path=\"/species/:page\">\r\n                <Species />\r\n            </Route>\r\n\r\n            <Route exact path=\"/specie/:id\">\r\n                <Specie />\r\n            </Route>\r\n\r\n            <Route exact path=\"/planet/:id\">\r\n                <Planet />\r\n            </Route>\r\n\r\n            <Route exact path=\"/starships/:page\">\r\n                <Starships />\r\n            </Route>\r\n\r\n            <Route exact path=\"/starship/:id\">\r\n                <Starship />\r\n            </Route>\r\n\r\n            <Route exact path=\"/vehicles/:page\">\r\n                <Vehicles />\r\n            </Route>\r\n\r\n            <Route exact path=\"/vehicle/:id\">\r\n                <Vehicle />\r\n            </Route>\r\n\r\n            <Route exact path=\"*\">\r\n                <NotFound />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}","import React from 'react';\nimport { BrowserRouter, Link } from 'react-router-dom';\n\nimport './App.css';\n\nimport { Template } from './components/MainComponents';\nimport Header from './components/partials/Header';\nimport Footer from './components/partials/Footer';\n\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Template>\n        <div className=\"stars\"></div>\n        <Header />\n\n        <Routes />\n\n        <Footer />\n      </Template>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}